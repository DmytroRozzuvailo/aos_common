// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: iamanager.proto

package iamanager

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCertTypesRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []string `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *GetCertTypesRsp) Reset() {
	*x = GetCertTypesRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertTypesRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertTypesRsp) ProtoMessage() {}

func (x *GetCertTypesRsp) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertTypesRsp.ProtoReflect.Descriptor instead.
func (*GetCertTypesRsp) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{0}
}

func (x *GetCertTypesRsp) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

type ClearReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *ClearReq) Reset() {
	*x = ClearReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearReq) ProtoMessage() {}

func (x *ClearReq) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearReq.ProtoReflect.Descriptor instead.
func (*ClearReq) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{1}
}

func (x *ClearReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SetOwnerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *SetOwnerReq) Reset() {
	*x = SetOwnerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetOwnerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetOwnerReq) ProtoMessage() {}

func (x *SetOwnerReq) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetOwnerReq.ProtoReflect.Descriptor instead.
func (*SetOwnerReq) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{2}
}

func (x *SetOwnerReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SetOwnerReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CreateKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *CreateKeyReq) Reset() {
	*x = CreateKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyReq) ProtoMessage() {}

func (x *CreateKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyReq.ProtoReflect.Descriptor instead.
func (*CreateKeyReq) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{3}
}

func (x *CreateKeyReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateKeyReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CreateKeyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Csr  string `protobuf:"bytes,2,opt,name=csr,proto3" json:"csr,omitempty"`
}

func (x *CreateKeyRsp) Reset() {
	*x = CreateKeyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateKeyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateKeyRsp) ProtoMessage() {}

func (x *CreateKeyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateKeyRsp.ProtoReflect.Descriptor instead.
func (*CreateKeyRsp) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{4}
}

func (x *CreateKeyRsp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CreateKeyRsp) GetCsr() string {
	if x != nil {
		return x.Csr
	}
	return ""
}

type ApplyCertReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Cert string `protobuf:"bytes,2,opt,name=cert,proto3" json:"cert,omitempty"`
}

func (x *ApplyCertReq) Reset() {
	*x = ApplyCertReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyCertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyCertReq) ProtoMessage() {}

func (x *ApplyCertReq) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyCertReq.ProtoReflect.Descriptor instead.
func (*ApplyCertReq) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{5}
}

func (x *ApplyCertReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApplyCertReq) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

type ApplyCertRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	CertUrl string `protobuf:"bytes,2,opt,name=cert_url,json=certUrl,proto3" json:"cert_url,omitempty"`
}

func (x *ApplyCertRsp) Reset() {
	*x = ApplyCertRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyCertRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyCertRsp) ProtoMessage() {}

func (x *ApplyCertRsp) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyCertRsp.ProtoReflect.Descriptor instead.
func (*ApplyCertRsp) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{6}
}

func (x *ApplyCertRsp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApplyCertRsp) GetCertUrl() string {
	if x != nil {
		return x.CertUrl
	}
	return ""
}

type GetCertReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Issuer []byte `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Serial string `protobuf:"bytes,3,opt,name=serial,proto3" json:"serial,omitempty"`
}

func (x *GetCertReq) Reset() {
	*x = GetCertReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertReq) ProtoMessage() {}

func (x *GetCertReq) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertReq.ProtoReflect.Descriptor instead.
func (*GetCertReq) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{7}
}

func (x *GetCertReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetCertReq) GetIssuer() []byte {
	if x != nil {
		return x.Issuer
	}
	return nil
}

func (x *GetCertReq) GetSerial() string {
	if x != nil {
		return x.Serial
	}
	return ""
}

type GetCertRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	CertUrl string `protobuf:"bytes,2,opt,name=cert_url,json=certUrl,proto3" json:"cert_url,omitempty"`
	KeyUrl  string `protobuf:"bytes,3,opt,name=key_url,json=keyUrl,proto3" json:"key_url,omitempty"`
}

func (x *GetCertRsp) Reset() {
	*x = GetCertRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCertRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCertRsp) ProtoMessage() {}

func (x *GetCertRsp) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCertRsp.ProtoReflect.Descriptor instead.
func (*GetCertRsp) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{8}
}

func (x *GetCertRsp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetCertRsp) GetCertUrl() string {
	if x != nil {
		return x.CertUrl
	}
	return ""
}

func (x *GetCertRsp) GetKeyUrl() string {
	if x != nil {
		return x.KeyUrl
	}
	return ""
}

type SetUsersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []string `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *SetUsersReq) Reset() {
	*x = SetUsersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetUsersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetUsersReq) ProtoMessage() {}

func (x *SetUsersReq) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetUsersReq.ProtoReflect.Descriptor instead.
func (*SetUsersReq) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{9}
}

func (x *SetUsersReq) GetUsers() []string {
	if x != nil {
		return x.Users
	}
	return nil
}

type RegisterServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId   string                  `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Permissions map[string]*Permissions `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RegisterServiceReq) Reset() {
	*x = RegisterServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceReq) ProtoMessage() {}

func (x *RegisterServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceReq.ProtoReflect.Descriptor instead.
func (*RegisterServiceReq) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{10}
}

func (x *RegisterServiceReq) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *RegisterServiceReq) GetPermissions() map[string]*Permissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type RegisterServiceRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *RegisterServiceRsp) Reset() {
	*x = RegisterServiceRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterServiceRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterServiceRsp) ProtoMessage() {}

func (x *RegisterServiceRsp) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterServiceRsp.ProtoReflect.Descriptor instead.
func (*RegisterServiceRsp) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{11}
}

func (x *RegisterServiceRsp) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type UnregisterServiceReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceId string `protobuf:"bytes,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
}

func (x *UnregisterServiceReq) Reset() {
	*x = UnregisterServiceReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterServiceReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterServiceReq) ProtoMessage() {}

func (x *UnregisterServiceReq) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterServiceReq.ProtoReflect.Descriptor instead.
func (*UnregisterServiceReq) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{12}
}

func (x *UnregisterServiceReq) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

type EncryptDiskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Password string `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *EncryptDiskReq) Reset() {
	*x = EncryptDiskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iamanager_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptDiskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptDiskReq) ProtoMessage() {}

func (x *EncryptDiskReq) ProtoReflect() protoreflect.Message {
	mi := &file_iamanager_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptDiskReq.ProtoReflect.Descriptor instead.
func (*EncryptDiskReq) Descriptor() ([]byte, []int) {
	return file_iamanager_proto_rawDescGZIP(), []int{13}
}

func (x *EncryptDiskReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

var File_iamanager_proto protoreflect.FileDescriptor

var file_iamanager_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0c, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x69, 0x61,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x27, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x1e, 0x0a, 0x08,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a, 0x0b,
	0x53, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3e, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x34, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x73, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x73,
	0x72, 0x22, 0x36, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x22, 0x3d, 0x0a, 0x0c, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x43, 0x65, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x65, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x22, 0x50, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x43,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x43, 0x65, 0x72, 0x74, 0x52, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x65, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x65, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x55, 0x72, 0x6c,
	0x22, 0x23, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x53, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x31, 0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x71, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x1a, 0x59, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2c, 0x0a, 0x12, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x73,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x35, 0x0a, 0x14, 0x55, 0x6e, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64,
	0x22, 0x2c, 0x0a, 0x0e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x32, 0x9b,
	0x06, 0x0a, 0x09, 0x49, 0x41, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x47, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1d, 0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x12, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x39, 0x0a,
	0x05, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x16, 0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x09, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52,
	0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x52, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x09, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x65, 0x72, 0x74, 0x12, 0x1a, 0x2e,
	0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x69, 0x61, 0x6d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x43, 0x65,
	0x72, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x12, 0x18, 0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x69,
	0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x65, 0x72, 0x74, 0x52, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x73, 0x12, 0x19, 0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0f, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x69,
	0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x11, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x44, 0x69, 0x73, 0x6b, 0x12, 0x1c, 0x2e, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x44, 0x69, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32,
	0x67, 0x69, 0x74, 0x70, 0x63, 0x74, 0x2e, 0x65, 0x70, 0x61, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x65, 0x70, 0x6d, 0x64, 0x2d, 0x61, 0x65, 0x70, 0x72, 0x2f, 0x61, 0x6f, 0x73, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x61, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_iamanager_proto_rawDescOnce sync.Once
	file_iamanager_proto_rawDescData = file_iamanager_proto_rawDesc
)

func file_iamanager_proto_rawDescGZIP() []byte {
	file_iamanager_proto_rawDescOnce.Do(func() {
		file_iamanager_proto_rawDescData = protoimpl.X.CompressGZIP(file_iamanager_proto_rawDescData)
	})
	return file_iamanager_proto_rawDescData
}

var file_iamanager_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_iamanager_proto_goTypes = []interface{}{
	(*GetCertTypesRsp)(nil),      // 0: iamanager.v1.GetCertTypesRsp
	(*ClearReq)(nil),             // 1: iamanager.v1.ClearReq
	(*SetOwnerReq)(nil),          // 2: iamanager.v1.SetOwnerReq
	(*CreateKeyReq)(nil),         // 3: iamanager.v1.CreateKeyReq
	(*CreateKeyRsp)(nil),         // 4: iamanager.v1.CreateKeyRsp
	(*ApplyCertReq)(nil),         // 5: iamanager.v1.ApplyCertReq
	(*ApplyCertRsp)(nil),         // 6: iamanager.v1.ApplyCertRsp
	(*GetCertReq)(nil),           // 7: iamanager.v1.GetCertReq
	(*GetCertRsp)(nil),           // 8: iamanager.v1.GetCertRsp
	(*SetUsersReq)(nil),          // 9: iamanager.v1.SetUsersReq
	(*RegisterServiceReq)(nil),   // 10: iamanager.v1.RegisterServiceReq
	(*RegisterServiceRsp)(nil),   // 11: iamanager.v1.RegisterServiceRsp
	(*UnregisterServiceReq)(nil), // 12: iamanager.v1.UnregisterServiceReq
	(*EncryptDiskReq)(nil),       // 13: iamanager.v1.EncryptDiskReq
	nil,                          // 14: iamanager.v1.RegisterServiceReq.PermissionsEntry
	(*Permissions)(nil),          // 15: iamanager.v1.Permissions
	(*empty.Empty)(nil),          // 16: google.protobuf.Empty
}
var file_iamanager_proto_depIdxs = []int32{
	14, // 0: iamanager.v1.RegisterServiceReq.permissions:type_name -> iamanager.v1.RegisterServiceReq.PermissionsEntry
	15, // 1: iamanager.v1.RegisterServiceReq.PermissionsEntry.value:type_name -> iamanager.v1.Permissions
	16, // 2: iamanager.v1.IAManager.GetCertTypes:input_type -> google.protobuf.Empty
	16, // 3: iamanager.v1.IAManager.FinishProvisioning:input_type -> google.protobuf.Empty
	1,  // 4: iamanager.v1.IAManager.Clear:input_type -> iamanager.v1.ClearReq
	2,  // 5: iamanager.v1.IAManager.SetOwner:input_type -> iamanager.v1.SetOwnerReq
	3,  // 6: iamanager.v1.IAManager.CreateKey:input_type -> iamanager.v1.CreateKeyReq
	5,  // 7: iamanager.v1.IAManager.ApplyCert:input_type -> iamanager.v1.ApplyCertReq
	7,  // 8: iamanager.v1.IAManager.GetCert:input_type -> iamanager.v1.GetCertReq
	9,  // 9: iamanager.v1.IAManager.SetUsers:input_type -> iamanager.v1.SetUsersReq
	10, // 10: iamanager.v1.IAManager.RegisterService:input_type -> iamanager.v1.RegisterServiceReq
	12, // 11: iamanager.v1.IAManager.UnregisterService:input_type -> iamanager.v1.UnregisterServiceReq
	13, // 12: iamanager.v1.IAManager.EncryptDisk:input_type -> iamanager.v1.EncryptDiskReq
	0,  // 13: iamanager.v1.IAManager.GetCertTypes:output_type -> iamanager.v1.GetCertTypesRsp
	16, // 14: iamanager.v1.IAManager.FinishProvisioning:output_type -> google.protobuf.Empty
	16, // 15: iamanager.v1.IAManager.Clear:output_type -> google.protobuf.Empty
	16, // 16: iamanager.v1.IAManager.SetOwner:output_type -> google.protobuf.Empty
	4,  // 17: iamanager.v1.IAManager.CreateKey:output_type -> iamanager.v1.CreateKeyRsp
	6,  // 18: iamanager.v1.IAManager.ApplyCert:output_type -> iamanager.v1.ApplyCertRsp
	8,  // 19: iamanager.v1.IAManager.GetCert:output_type -> iamanager.v1.GetCertRsp
	16, // 20: iamanager.v1.IAManager.SetUsers:output_type -> google.protobuf.Empty
	11, // 21: iamanager.v1.IAManager.RegisterService:output_type -> iamanager.v1.RegisterServiceRsp
	16, // 22: iamanager.v1.IAManager.UnregisterService:output_type -> google.protobuf.Empty
	16, // 23: iamanager.v1.IAManager.EncryptDisk:output_type -> google.protobuf.Empty
	13, // [13:24] is the sub-list for method output_type
	2,  // [2:13] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_iamanager_proto_init() }
func file_iamanager_proto_init() {
	if File_iamanager_proto != nil {
		return
	}
	file_iamanagercommon_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_iamanager_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertTypesRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetOwnerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateKeyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyCertReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyCertRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCertRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetUsersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterServiceRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterServiceReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iamanager_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptDiskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iamanager_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_iamanager_proto_goTypes,
		DependencyIndexes: file_iamanager_proto_depIdxs,
		MessageInfos:      file_iamanager_proto_msgTypes,
	}.Build()
	File_iamanager_proto = out.File
	file_iamanager_proto_rawDesc = nil
	file_iamanager_proto_goTypes = nil
	file_iamanager_proto_depIdxs = nil
}
